{"version":3,"sources":["environments/environment.js","services/AuthService.js","components/Login.js","services/AlamacenService.js","components/shared/Categoria.js","components/shared/Producto.js","components/Almacen.js","components/Compra.js","components/Usuario.js","components/Venta.js","services/UsuarioService.js","components/Profile.js","components/Nav.js","App.js","index.js"],"names":["URL_API","AuthService","login","email","password","body","axios","post","url","then","res","Promise","resolve","catch","err","reject","setUser","user","localStorage","setItem","JSON","stringify","_id","rol","getId","getItem","this","getToken","clear","token","Login","props","handleChange","e","setState","target","name","value","handleSubmit","preventDefault","Auth","state","setToken","data","handleChangeAuth","Swal","fire","nombre","response","status","Grid","columns","Row","Column","width","Card","Group","style","height","marginLeft","marginTop","fluid","Content","Header","textAlign","onSubmit","Input","icon","iconPosition","type","placeholder","onChange","Button","basic","color","Component","AlmacenService","getCategorias","get","urlCategoria","config","getCategoria","id","postCategoria","descripcion","putCategoria","put","deleteCategoria","delete","getProductos","urlProducto","getProducto","postProducto","categoria","codigo","precio_venta","stock","putProducto","deleteProducto","headers","Categoria","a","Almacen","categorias","console","log","cleanForm","handleSelect","handleDelete","title","text","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","cancelButtonText","result","Container","Form","Field","required","TextArea","onClick","Table","celled","padded","HeaderCell","Body","map","key","Cell","Producto","getArticulos","articulos","n_categoria","handleSelectCategoria","showModal","modal","action","Modal","open","onClose","Actions","negative","panes","menuItem","render","Tab","Pane","Compra","Usuario","Venta","UsuarioService","getProfile","Profile","getUser","tipo_documento","num_documento","direccion","telefono","Nav","handleAuth","auth","loggedOut","visible","cargo","getCargo","sections","menus","link","Menu","pointing","index","to","Item","handleItemClick","Icon","disabled","position","path","exact","routeProps","propname","from","App","islogged","loggedIn","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.fdd03037.chunk.js","sourcesContent":["export const URL_API = 'https://casv-sistema.herokuapp.com/api/';","import axios from 'axios';\r\nimport { URL_API } from '../environments/environment';\r\n\r\nexport default class AuthService {\r\n\r\n    constructor() {\r\n        this.url = URL_API + 'usuario/';\r\n    }\r\n\r\n    login = (email, password) => {\r\n        let body = { email, password };\r\n        return axios.post(`${this.url}login`, body).then(res => Promise.resolve(res)).catch(err => Promise.reject(err));\r\n    }\r\n    loggedIn() {\r\n        return !!this.getToken();\r\n    }\r\n\r\n    loggedOut() {\r\n        localStorage.clear();\r\n    }\r\n\r\n    getToken() {\r\n        return localStorage.getItem('token');\r\n    }\r\n\r\n    setToken(token) {\r\n        localStorage.setItem('token', token);\r\n    }\r\n    setUser = (user) => {\r\n        localStorage.setItem('user', JSON.stringify(user));\r\n        localStorage.setItem('id', user._id);\r\n        localStorage.setItem('cargo', user.rol);\r\n    }\r\n    getCargo() {\r\n        return localStorage.getItem('cargo');\r\n    }\r\n    getId = () => {\r\n        return localStorage.getItem('id');\r\n    }\r\n\r\n}","import React, { Component } from 'react'\r\nimport { Grid, Button, Card, Input } from 'semantic-ui-react'\r\nimport AuthService from '../services/AuthService';\r\nimport Swal from 'sweetalert2';\r\n\r\nexport default class Login extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.Auth = new AuthService();\r\n        this.state = { email: '', password: '' };\r\n        this.handleChangeAuth = props.handleChangeAuth;\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        });\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.Auth.login(this.state.email, this.state.password)\r\n            .then(res => {\r\n                this.Auth.setToken(res.data.token);\r\n                this.Auth.setUser(res.data.user);\r\n                this.handleChangeAuth();\r\n                Swal.fire('Login', `Bienvenido ${res.data.user.nombre}`, 'success');\r\n            }).catch(err => {\r\n                if (err.response.status === 404) {\r\n                    Swal.fire('Login', 'Credenciales Erroneas', 'error');\r\n                } else {\r\n                    Swal.fire('Login', 'Error interno, comuniquese con el proveedor', 'error');\r\n                }\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Grid columns={3}>\r\n                <Grid.Row>\r\n                    <Grid.Column />\r\n                    <Grid.Column width={6}>\r\n                        <Card.Group style={{ width: '500px', height: '300px', marginLeft: 'calc(50% - 250px)', marginTop: '30%' }} >\r\n                            <Card fluid>\r\n                                <Card.Content>\r\n                                    <Card.Header textAlign='center'>Formulario de Login</Card.Header>\r\n                                </Card.Content>\r\n                                <Card.Content>\r\n                                    <form onSubmit={this.handleSubmit}>\r\n                                        <Input icon='mail' iconPosition='left' fluid type=\"text\" name=\"email\" placeholder='Usuario' onChange={this.handleChange} />\r\n                                        <br />\r\n                                        <Input icon='slack hash' iconPosition='left' fluid type='password' name=\"password\" placeholder='Contraseña' onChange={this.handleChange} />\r\n                                        <br />\r\n                                        <Button fluid basic color='green'>Entrar</Button>\r\n                                    </form>\r\n                                </Card.Content>\r\n                            </Card>\r\n                        </Card.Group>\r\n                    </Grid.Column>\r\n                    <Grid.Column />\r\n                </Grid.Row>\r\n            </Grid>\r\n\r\n        )\r\n    }\r\n}\r\n","import axios from 'axios';\r\nimport { URL_API } from '../environments/environment';\r\n\r\nexport default class AlmacenService {\r\n    constructor() {\r\n        this.urlCategoria = `${URL_API}categoria/`;\r\n        this.urlProducto = `${URL_API}articulo/`;\r\n        this.config = {\r\n            headers: {\r\n                token: localStorage.getItem('token')\r\n            }\r\n        }\r\n    }\r\n    // Categorias\r\n    getCategorias = (value) => {\r\n        return axios.get(`${this.urlCategoria}list/${value}`, this.config).then(res => Promise.resolve(res)).catch(err => Promise.reject(err));\r\n    }\r\n    getCategoria = (id) => {\r\n        return axios.get(this.urlCategoria + 'query/' + id, this.config).then(res => Promise.resolve(res)).catch(err => Promise.reject(err));\r\n    }\r\n    postCategoria = (nombre, descripcion) => {\r\n        let body = { nombre, descripcion };\r\n        return axios.post(`${this.urlCategoria}add`, body, this.config).then(res => Promise.resolve(res)).catch(err => Promise.reject(err));\r\n    }\r\n    putCategoria = (_id, nombre, descripcion) => {\r\n        let body = { _id, nombre, descripcion };\r\n        return axios.put(`${this.urlCategoria}update`, body, this.config).then(res => Promise.resolve(res)).catch(err => Promise.reject(err));\r\n    }\r\n    deleteCategoria = (id) => {\r\n        return axios.delete(`${this.urlCategoria}remove/${id}`, this.config).then(res => Promise.resolve(res)).catch(err => Promise.reject(err));\r\n    }\r\n    // Productos\r\n    getProductos = (value) => {\r\n        return axios.get(`${this.urlProducto}list/${value}`, this.config).then(res => Promise.resolve(res)).catch(err => Promise.reject(err));\r\n    }\r\n    getProducto = (id) => {\r\n        return axios.get(this.urlProducto + 'query/' + id, this.config).then(res => Promise.resolve(res)).catch(err => Promise.reject(err));\r\n    }\r\n    postProducto = (categoria, codigo, nombre, descripcion, precio_venta, stock) => {\r\n        let body = { categoria, codigo, nombre, descripcion, precio_venta, stock };\r\n        return axios.post(`${this.urlProducto}add`, body, this.config).then(res => Promise.resolve(res)).catch(err => Promise.reject(err));\r\n    }\r\n    putProducto = (_id, categoria, codigo, nombre, descripcion, precio_venta, stock) => {\r\n        let body = { _id, categoria, codigo, nombre, descripcion, precio_venta, stock };\r\n        return axios.put(`${this.urlProducto}update`, body, this.config).then(res => Promise.resolve(res)).catch(err => Promise.reject(err));\r\n    }\r\n    deleteProducto = (id) => {\r\n        return axios.delete(`${this.urlProducto}remove/${id}`, this.config).then(res => Promise.resolve(res)).catch(err => Promise.reject(err));\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Grid, Form, Container, Card, Input, TextArea, Button, Table } from 'semantic-ui-react';\r\nimport AlmacenService from '../../services/AlamacenService';\r\nimport Swal from 'sweetalert2';\r\n\r\nexport default class Categoria extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.Almacen = new AlmacenService();\r\n        this.state = { id: '', nombre: '', descripcion: '', categorias: [] };\r\n        this.getCategorias();\r\n    }\r\n\r\n    getCategorias = async (e) => {\r\n        let value = '';\r\n        (e) ? value = e.target.value : value = '';\r\n        await this.Almacen.getCategorias(value)\r\n            .then(res => {\r\n                this.setState({ categorias: res.data })\r\n            }).catch(err => {\r\n                console.log(err.response);\r\n            });\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        });\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (this.state.id === '') {\r\n            this.Almacen.postCategoria(this.state.nombre, this.state.descripcion)\r\n                .then(res => {\r\n                    this.getCategorias();\r\n                    Swal.fire('Categoria', `Categoria ${this.state.nombre} agregada`, 'success');\r\n                    this.cleanForm();\r\n                }).catch(err => {\r\n                    console.log(err.response);\r\n                });\r\n        } else {\r\n            this.Almacen.putCategoria(this.state.id, this.state.nombre, this.state.descripcion)\r\n                .then(res => {\r\n                    this.getCategorias();\r\n                    Swal.fire('Categoria', `Categoria ${this.state.nombre} Actualizada`, 'success');\r\n                    this.cleanForm();\r\n                }).catch(err => {\r\n                    console.log(err.response);\r\n                });\r\n        }\r\n    }\r\n\r\n    handleSelect = async (data) => {\r\n        await this.setState({\r\n            nombre: data.nombre,\r\n            descripcion: data.descripcion,\r\n            id: data._id\r\n        });\r\n    }\r\n    handleDelete = async (data) => {\r\n\r\n        await Swal.fire({\r\n            title: 'Categoria',\r\n            text: `Seguro que desea eliminar ${data.nombre}`,\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonColor: '#3085d6',\r\n            cancelButtonColor: '#d33',\r\n            confirmButtonText: 'Si, Eliminar',\r\n            cancelButtonText: 'Cancelar'\r\n        }).then((result) => {\r\n            if (result.value) {\r\n                this.Almacen.deleteCategoria(data._id)\r\n                    .then(res => {\r\n                        this.getCategorias();\r\n                        Swal.fire('Categoria', `Categoria ${data.nombre} eliminada`, 'success');\r\n                        this.cleanForm();\r\n                    }).catch(err => {\r\n                        Swal.fire('Categoria', `Categoria ${this.data.nombre} no puedo ser eliminada`, 'success');\r\n                    });\r\n            }\r\n        });\r\n    }\r\n\r\n    cleanForm = (e) => {\r\n        this.setState({\r\n            nombre: '',\r\n            descripcion: '',\r\n            id: ''\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Grid columns={2} >\r\n                <Grid.Row>\r\n                    <Grid.Column>\r\n                        <Card fluid>\r\n                            <Card.Content>\r\n                                <Card.Header>Categoria</Card.Header>\r\n                            </Card.Content>\r\n                            <Card.Content>\r\n                                <Container>\r\n                                    <Form>\r\n                                        <Form.Field>\r\n                                            <label>Nombre</label>\r\n                                            <Input name=\"nombre\" value={this.state.nombre} onChange={this.handleChange} placeholder=\"Nombre\" required />\r\n                                        </Form.Field>\r\n                                        <Form.Field>\r\n                                            <label>Descripcion</label>\r\n                                            <TextArea fluid=\"true\" name=\"descripcion\" value={this.state.descripcion} onChange={this.handleChange} placeholder=\"descripcion\" />\r\n                                        </Form.Field>\r\n                                        <Grid columns={2}>\r\n                                            <Grid.Row>\r\n                                                <Grid.Column>\r\n                                                    <Form.Field>\r\n                                                        <Button fluid color='yellow' onClick={this.cleanForm}>Limpiar</Button>\r\n                                                    </Form.Field>\r\n                                                </Grid.Column>\r\n                                                <Grid.Column>\r\n                                                    <Form.Field>\r\n                                                        <Button fluid color='green' onClick={this.handleSubmit}>Guardar</Button>\r\n                                                    </Form.Field>\r\n                                                </Grid.Column>\r\n                                            </Grid.Row>\r\n                                        </Grid>\r\n                                    </Form>\r\n                                </Container>\r\n                            </Card.Content>\r\n                        </Card>\r\n                    </Grid.Column>\r\n                    <Grid.Column>\r\n                        <Input fluid name=\"value\" icon='search' placeholder='Buscar categoria' onChange={this.getCategorias} />\r\n                        <Table celled padded>\r\n                            <Table.Header>\r\n                                <Table.Row>\r\n                                    <Table.HeaderCell>Nombre</Table.HeaderCell>\r\n                                    <Table.HeaderCell>Descripcion</Table.HeaderCell>\r\n                                    <Table.HeaderCell>Opciones</Table.HeaderCell>\r\n                                </Table.Row>\r\n                            </Table.Header>\r\n                            <Table.Body>\r\n                                {this.state.categorias.map((text) =>\r\n                                    (\r\n                                        <Table.Row key={text._id} >\r\n                                            <Table.Cell>{text.nombre}</Table.Cell>\r\n                                            <Table.Cell>{text.descripcion}</Table.Cell>\r\n                                            <Table.Cell>\r\n                                                <Grid columns={2} >\r\n                                                    <Grid.Row>\r\n                                                        <Grid.Column>\r\n                                                            <Form.Field>\r\n                                                                <Button fluid color='blue' onClick={() => this.handleSelect(text)}>Editar</Button>\r\n                                                            </Form.Field>\r\n                                                        </Grid.Column>\r\n                                                        <Grid.Column>\r\n                                                            <Form.Field>\r\n                                                                <Button fluid color='red' onClick={() => this.handleDelete(text)}>Eliminar</Button>\r\n                                                            </Form.Field>\r\n                                                        </Grid.Column>\r\n                                                    </Grid.Row>\r\n                                                </Grid>\r\n                                            </Table.Cell>\r\n                                        </Table.Row>\r\n                                    )\r\n                                )}\r\n                            </Table.Body>\r\n                        </Table>\r\n                    </Grid.Column>\r\n                </Grid.Row>\r\n            </Grid >\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Grid, Form, Container, Card, Input, TextArea, Button, Table, Modal } from 'semantic-ui-react';\r\nimport AlmacenService from '../../services/AlamacenService';\r\nimport Swal from 'sweetalert2';\r\n\r\nexport default class Producto extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.Almacen = new AlmacenService();\r\n        this.state = {\r\n            id: '', n_categoria: '', categoria: '', codigo: '', nombre: '', descripcion: '', precio_venta: '', stock: '', articulos: [], categorias: [], modal: false\r\n        };\r\n        this.getArticulos();\r\n        this.getCategorias();\r\n    }\r\n\r\n    getCategorias = async (e) => {\r\n        let value = '';\r\n        (e) ? value = e.target.value : value = '';\r\n        await this.Almacen.getCategorias(value)\r\n            .then(res => {\r\n                this.setState({ categorias: res.data })\r\n            }).catch(err => {\r\n                console.log(err.response);\r\n            });\r\n    }\r\n    getArticulos = async (e) => {\r\n        let value = '';\r\n        (e) ? value = e.target.value : value = '';\r\n        await this.Almacen.getProductos(value)\r\n            .then(res => {\r\n                this.setState({ articulos: res.data });\r\n            }).catch(err => {\r\n                console.log(err.response);\r\n            });\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        });\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (this.state.id === '') {\r\n            this.Almacen.postProducto(this.state.categoria, this.state.codigo, this.state.nombre, this.state.descripcion, this.state.precio_venta, this.state.stock)\r\n                .then(res => {\r\n                    this.getArticulos();\r\n                    Swal.fire('Producto', `Producto ${this.state.nombre} agregado`, 'success');\r\n                    this.cleanForm();\r\n                }).catch(err => {\r\n                    console.log(err.response);\r\n                    Swal.fire('Producto', `Producto ${this.state.nombre} no pudo ser agregado`, 'error');\r\n                });\r\n        } else {\r\n            this.Almacen.putProducto(this.state.id, this.state.categoria, this.state.codigo, this.state.nombre, this.state.descripcion, this.state.precio_venta, this.state.stock)\r\n                .then(res => {\r\n                    this.getArticulos();\r\n                    Swal.fire('Producto', `Producto ${this.state.nombre} Actualizado`, 'success');\r\n                    this.cleanForm();\r\n                }).catch(err => {\r\n                    console.log(err.response);\r\n                    Swal.fire('Producto', `Producto ${this.state.nombre} no pudo ser actualizado`, 'error');\r\n                });\r\n        }\r\n    }\r\n    handleSelect = async (data) => {\r\n        await this.setState({\r\n            id: data._id,\r\n            categoria: data.categoria._id,\r\n            n_categoria: data.categoria.nombre,\r\n            codigo: data.codigo,\r\n            nombre: data.nombre,\r\n            descripcion: data.descripcion,\r\n            precio_venta: data.precio_venta,\r\n            stock: data.stock\r\n        });\r\n    }\r\n    handleSelectCategoria = async (data) => {\r\n        await this.setState({\r\n            n_categoria: data.nombre,\r\n            categoria: data._id,\r\n        });\r\n        this.showModal();\r\n    }\r\n    handleDelete = async (data) => {\r\n\r\n        await Swal.fire({\r\n            title: 'Articulo',\r\n            text: `Seguro que desea eliminar ${data.nombre}`,\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonColor: '#3085d6',\r\n            cancelButtonColor: '#d33',\r\n            confirmButtonText: 'Si, Eliminar',\r\n            cancelButtonText: 'Cancelar'\r\n        }).then((result) => {\r\n            if (result.value) {\r\n                this.Almacen.deleteProducto(data._id)\r\n                    .then(res => {\r\n                        this.getArticulos();\r\n                        Swal.fire('Producto', `Producto ${data.nombre} eliminado`, 'success');\r\n                        this.cleanForm();\r\n                    }).catch(err => {\r\n                        Swal.fire('Producto', `Producto ${this.data.nombre} no puedo ser eliminado`, 'success');\r\n                    });\r\n            }\r\n        });\r\n    }\r\n    cleanForm = async (e) => {\r\n        await this.setState({\r\n            id: null,\r\n            categoria: '',\r\n            codigo: '',\r\n            nombre: '',\r\n            descripcion: '',\r\n            precio_venta: '',\r\n            stock: '',\r\n            n_categoria: ''\r\n        });\r\n    }\r\n    showModal = async () => {\r\n        await this.setState({ modal: !this.state.modal });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Grid columns={2} >\r\n                <Grid.Row>\r\n                    <Grid.Column>\r\n                        <Card fluid>\r\n                            <Card.Content>\r\n                                <Card.Header onClick={this.cleanForm}>Producto</Card.Header>\r\n                            </Card.Content>\r\n                            <Card.Content>\r\n                                <Container>\r\n                                    <Form>\r\n                                        <Form.Field>\r\n                                            <label>Categoria</label>\r\n                                            <Input name=\"n_categoria\" value={this.state.n_categoria} onChange={this.handleChange} placeholder=\"Categoria\" required action >\r\n                                                <input />\r\n                                                <Button onClick={this.showModal}>Buscar</Button>\r\n                                            </Input>\r\n                                        </Form.Field>\r\n                                        <Form.Field>\r\n                                            <label>Codigo</label>\r\n                                            <Input name=\"codigo\" value={this.state.codigo} onChange={this.handleChange} placeholder=\"Codigo de barras\" required />\r\n                                        </Form.Field>\r\n                                        <Form.Field>\r\n                                            <label>Nombre</label>\r\n                                            <Input name=\"nombre\" value={this.state.nombre} onChange={this.handleChange} placeholder=\"Nombre\" required />\r\n                                        </Form.Field>\r\n                                        <Form.Field>\r\n                                            <label>Descripcion</label>\r\n                                            <TextArea fluid=\"true\" name=\"descripcion\" value={this.state.descripcion} onChange={this.handleChange} placeholder=\"descripcion\" />\r\n                                        </Form.Field>\r\n                                        <Form.Field>\r\n                                            <label>Precio</label>\r\n                                            <Input name=\"precio_venta\" value={this.state.precio_venta} onChange={this.handleChange} placeholder=\"Precio\" required />\r\n                                        </Form.Field>\r\n                                        <Form.Field>\r\n                                            <label>Stock</label>\r\n                                            <Input name=\"stock\" value={this.state.stock} onChange={this.handleChange} placeholder=\"Stock\" required />\r\n                                        </Form.Field>\r\n                                        <Grid columns={2} >\r\n                                            <Grid.Row>\r\n                                                <Grid.Column>\r\n                                                    <Form.Field>\r\n                                                        <Button fluid color='yellow' onClick={this.cleanForm}>Limpiar</Button>\r\n                                                    </Form.Field>\r\n                                                </Grid.Column>\r\n                                                <Grid.Column>\r\n                                                    <Form.Field>\r\n                                                        <Button fluid color='green' onClick={this.handleSubmit}>Guardar</Button>\r\n                                                    </Form.Field>\r\n                                                </Grid.Column>\r\n                                            </Grid.Row>\r\n                                        </Grid>\r\n                                    </Form>\r\n                                </Container>\r\n                            </Card.Content>\r\n                        </Card>\r\n                    </Grid.Column>\r\n                    <Grid.Column>\r\n                        <Input fluid name=\"value\" icon='search' placeholder='Buscar categoria' onChange={this.getArticulos} />\r\n                        <Table celled padded>\r\n                            <Table.Header>\r\n                                <Table.Row>\r\n                                    <Table.HeaderCell>Nombre</Table.HeaderCell>\r\n                                    <Table.HeaderCell>Descripcion</Table.HeaderCell>\r\n                                    <Table.HeaderCell>Opciones</Table.HeaderCell>\r\n                                </Table.Row>\r\n                            </Table.Header>\r\n\r\n                            <Table.Body>\r\n                                {this.state.articulos.map((text) =>\r\n                                    (\r\n                                        <Table.Row key={text._id} >\r\n                                            <Table.Cell>{text.nombre}</Table.Cell>\r\n                                            <Table.Cell>{text.descripcion}</Table.Cell>\r\n                                            <Table.Cell>\r\n                                                <Grid columns={2} >\r\n                                                    <Grid.Row>\r\n                                                        <Grid.Column>\r\n                                                            <Form.Field>\r\n                                                                <Button fluid color='blue' onClick={() => this.handleSelect(text)}>Editar</Button>\r\n                                                            </Form.Field>\r\n                                                        </Grid.Column>\r\n                                                        <Grid.Column>\r\n                                                            <Form.Field>\r\n                                                                <Button fluid color='red' onClick={() => this.handleDelete(text)}>Eliminar</Button>\r\n                                                            </Form.Field>\r\n                                                        </Grid.Column>\r\n                                                    </Grid.Row>\r\n                                                </Grid>\r\n                                            </Table.Cell>\r\n                                        </Table.Row>\r\n                                    )\r\n                                )}\r\n                            </Table.Body>\r\n                        </Table>\r\n                    </Grid.Column>\r\n                </Grid.Row>\r\n\r\n                <Modal open={this.state.modal} onClose={this.showModal}>\r\n                    <Modal.Header>Categorias</Modal.Header>\r\n                    <Modal.Content>\r\n                        <Table celled padded>\r\n                            <Table.Header>\r\n                                <Table.Row>\r\n                                    <Table.HeaderCell>Nombre</Table.HeaderCell>\r\n                                    <Table.HeaderCell>Descripcion</Table.HeaderCell>\r\n                                    <Table.HeaderCell>Opciones</Table.HeaderCell>\r\n                                </Table.Row>\r\n                            </Table.Header>\r\n                            <Table.Body>\r\n                                {this.state.categorias.map((text) =>\r\n                                    (\r\n                                        <Table.Row key={text._id} >\r\n                                            <Table.Cell>{text.nombre}</Table.Cell>\r\n                                            <Table.Cell>{text.descripcion}</Table.Cell>\r\n                                            <Table.Cell>\r\n                                                <Form.Field>\r\n                                                    <Button fluid color='blue' onClick={() => this.handleSelectCategoria(text)}>Seleccionar</Button>\r\n                                                </Form.Field>\r\n                                            </Table.Cell>\r\n                                        </Table.Row>\r\n                                    )\r\n                                )}\r\n                            </Table.Body>\r\n                        </Table>\r\n                    </Modal.Content>\r\n                    <Modal.Actions>\r\n                        <Button negative onClick={this.showModal}>No</Button>\r\n                    </Modal.Actions>\r\n                </Modal>\r\n            </Grid >\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Tab } from 'semantic-ui-react';\r\n// Componentes\r\nimport Categoria from './shared/Categoria';\r\nimport Producto from './shared/Producto';\r\n\r\nexport default class Almacen extends Component {\r\n    render() {\r\n        const panes = [\r\n            { menuItem: 'Categorias', render: () => <Tab.Pane><Categoria /></Tab.Pane> },\r\n            { menuItem: 'Productos', render: () => <Tab.Pane><Producto /></Tab.Pane> },\r\n        ]\r\n        return (\r\n            <Tab panes={panes} />\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Compra extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                Page Compra\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Usuario extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                Usuarios\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Venta extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                Page Ventas\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import axios from 'axios';\r\nimport { URL_API } from '../environments/environment';\r\n\r\nexport default class UsuarioService {\r\n    constructor() {\r\n        this.url = URL_API + 'usuario/';\r\n        this.config = {\r\n            headers: {\r\n                token: localStorage.getItem('token')\r\n            }\r\n        }\r\n    }\r\n    getProfile = () => {\r\n        // console.log(this.config);\r\n        let id = localStorage.getItem('id');\r\n        return axios.get(`${this.url}query/${id}`, this.config).then(res => Promise.resolve(res)).catch(err => Promise.reject(err));\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Button, Card, Input, Form } from 'semantic-ui-react'\r\nimport UsuarioService from '../services/UsuarioService';\r\nimport Swal from 'sweetalert2';\r\n\r\nexport default class Profile extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.Usuario = new UsuarioService();\r\n        this.state = { rol: '', nombre: '', tipo_documento: '', num_documento: '', direccion: '', telefono: '', email: '' };\r\n        this.getUser();\r\n    }\r\n\r\n    getUser = () => {\r\n        this.Usuario.getProfile().then(res => {\r\n            this.setState({\r\n                rol: res.data.rol,\r\n                nombre: res.data.nombre,\r\n                tipo_documento: res.data.tipo_documento,\r\n                num_documento: res.data.num_documento,\r\n                direccion: res.data.direccion,\r\n                telefono: res.data.telefono,\r\n                email: res.data.email\r\n            });\r\n        }).catch(err => {\r\n            if (err.response.status === 404) {\r\n                Swal.fire('Perfil', 'No se ha podido cargar su informacion', 'error');\r\n            } else {\r\n                Swal.fire('Error', 'Se genero un error interno, por favor avisar a soporte', 'error');\r\n            }\r\n            console.log(err.response)\r\n        });\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        console.log(this.state);\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        });\r\n    }\r\n\r\n    render() {\r\n        // const selectDocumento = [\r\n        //     { key: 'CC', value: 'CC', text: 'CC' },\r\n        //     { key: 'TI', value: 'TI', text: 'TI' },\r\n        //     { key: 'DE', value: 'DE', text: 'DE' },\r\n        // ]\r\n        // const selectCargo = [\r\n        //     { key: 'Administrador', value: 'Administrador', text: 'Administrador' },\r\n        //     { key: 'Almacenero', value: 'Almacenero', text: 'Almacenero' },\r\n        //     { key: 'Vendedor', value: 'Vendedor', text: 'Vendedor' },\r\n        // ];\r\n        return (\r\n            <div style={{ width: '500px', height: '300px', marginLeft: 'calc(50% - 250px)', marginTop: '5%' }}>\r\n                <Card fluid>\r\n                    <Card.Content>\r\n                        <Card.Header textAlign='center'>Perfil</Card.Header>\r\n                    </Card.Content>\r\n                    <Card.Content>\r\n                        <Form onSubmit={this.handleSubmit}>\r\n                            <Form.Field>\r\n                                <Input fluid type=\"text\" name=\"nombre\" value={this.state.nombre} placeholder='Nombre Completo' onChange={this.handleChange} />\r\n                            </Form.Field>\r\n                            <Form.Field>\r\n                                <Input fluid type=\"text\" name=\"tipo_documento\" value={this.state.tipo_documento} placeholder='Tipo de Documento' onChange={this.handleChange} />\r\n                            </Form.Field>\r\n                            <Form.Field>\r\n                                <Input fluid type=\"number\" name=\"num_documento\" value={this.state.num_documento} placeholder='Numero de identificacion' onChange={this.handleChange} />\r\n                            </Form.Field>\r\n                            <Form.Field>\r\n                                <Input fluid type=\"text\" name=\"rol\" value={this.state.rol} placeholder='Cargo' onChange={this.handleChange} />\r\n                            </Form.Field>\r\n                            <Form.Field>\r\n                                <Input fluid type=\"text\" name=\"direccion\" value={this.state.direccion} placeholder='Direccion de residencia' onChange={this.handleChange} />\r\n                            </Form.Field>\r\n                            <Form.Field>\r\n                                <Input fluid type=\"number\" name=\"telefono\" value={this.state.telefono} placeholder='Numero de contacto' onChange={this.handleChange} />\r\n                            </Form.Field>\r\n                            <Form.Field>\r\n                                <Input fluid type=\"email\" name=\"email\" value={this.state.email} placeholder=\"Correo electronico\" onChange={this.handleChange} />\r\n                            </Form.Field>\r\n                            <Form.Field>\r\n                                <Button fluid basic color='green'>Guardar</Button>\r\n                            </Form.Field>\r\n                        </Form>\r\n                    </Card.Content>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Route, Redirect, Link, Switch } from 'react-router-dom';\r\n\r\n// UI\r\nimport { Menu, Icon } from 'semantic-ui-react'\r\n// Servicios\r\nimport AuthService from '../services/AuthService';\r\n// Components\r\nimport Almacen from './Almacen';\r\nimport Compra from './Compra';\r\nimport Usuario from './Usuario';\r\nimport Venta from './Venta';\r\nimport Profile from './Profile';\r\n\r\nexport default class Nav extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.auth = new AuthService();\r\n        this.state = { visible: false, cargo: this.auth.getCargo() };\r\n        this.handleChangeAuth = props.handleChangeAuth;\r\n        this.sections = (this.state.cargo === 'Administrador')\r\n            ? ['Inicio', 'Almacén', 'Compras', 'Ventas', 'Accesos', 'Consultas'] :\r\n            (this.state.cargo === 'Vendedor') ? ['Inicio', 'Ventas'] : ['Inicio', 'Almacén', 'Compras'];\r\n        this.menus = [\r\n            { icon: 'home', link: '/' },\r\n            { icon: 'archive', link: '/Almacen' },\r\n            { icon: 'shop', link: '/Compras' },\r\n            { icon: 'barcode', link: '/Ventas' },\r\n            { icon: 'users', link: '/Accesos' },\r\n            { icon: 'search', link: '/Consultas' }\r\n        ];\r\n    }\r\n\r\n    handleAuth = (e) => {\r\n        this.auth.loggedOut();\r\n        this.handleChangeAuth();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Router>\r\n                <Menu pointing>\r\n                    {this.sections.map((text, index) => (\r\n                        // console.log({ text, index, menu: this.menus[index].link, icon: this.menus[index].icon });\r\n                        <Link to={this.menus[index].link} key={text + '_link'}>\r\n                            <Menu.Item key={text}\r\n                                name={text}\r\n                                onClick={this.handleItemClick}>\r\n                                <Icon disabled name={this.menus[index].icon} />\r\n                                {text}\r\n                            </Menu.Item>\r\n                        </Link>\r\n                    ))}\r\n                    <Menu.Item position='right'\r\n                        name='Salir'\r\n                        onClick={this.handleAuth}>\r\n                        <Icon disabled name=\"log out\" placeholder=\"Salir\" />\r\n                        Salir\r\n                    </Menu.Item>\r\n                </Menu>\r\n                <Switch>\r\n                    <Route path=\"/\" exact render={routeProps => <Profile {...routeProps} propname={'p'} />}></Route>\r\n                    <Route path=\"/Almacen\" exact render={routeProps => <Almacen {...routeProps} propname={'p'} />}></Route>\r\n                    <Route path=\"/Compras\" exact render={routeProps => <Compra {...routeProps} propname={'p'} />}></Route>\r\n                    <Route path=\"/Ventas\" exact render={routeProps => <Venta {...routeProps} propname={'p'} />}></Route>\r\n                    <Route path=\"/Accesos\" exact render={routeProps => <Usuario {...routeProps} propname={'p'} />}></Route>\r\n                    {/* <Route path=\"/Consultas\" exact render={routeProps =c> <Reports {...routeProps} propname={'p'} />}></Route> */}\r\n                    <Redirect from='*' to='/' />\r\n                </Switch>\r\n            </Router>\r\n\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\nimport AuthService from './services/AuthService';\nimport Login from './components/Login';\nimport Nav from './components/Nav';\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.auth = new AuthService();\n    this.state = { islogged: this.auth.loggedIn() };\n  }\n\n  handleChangeAuth = () => {\n    this.setState({ islogged: this.auth.loggedIn() });\n  }\n\n  render() {\n    if (this.state.islogged) {\n      return (\n        <Nav handleChangeAuth={this.handleChangeAuth} />\n      )\n    } else {\n      return (\n\n        <Router>\n          <Switch>\n            {/* <Route path=\"/login\" component={Login}></Route> */}\n            <Route path=\"/Login\" render={routeProps => <Login {...routeProps} handleChangeAuth={this.handleChangeAuth} />}></Route>\n            {/* <Route path=\"/register\" component={Register}></Route> */}\n            <Redirect from='*' to='/Login' />\n          </Switch>\n        </Router>\n        //   <Login handleChangeAuth={this.handleChangeAuth} />\n      )\n    }\n  }\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css'\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}